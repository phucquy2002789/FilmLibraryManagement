name: Build and Deploy ASP.NET Core API with Docker

on:
  push:
    branches:
      - master  # Trigger on push to the master branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Setup .NET SDK
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    # Step 3: Restore dependencies (Corrected)
    - name: Restore dependencies
      run: dotnet restore ./FilmLibraryManagement/FilmLibraryManagement.sln  # Ensure the path to the solution file is correct

    # Step 4: Build the project
    - name: Build the project
      run: dotnet build ./FilmLibraryManagement.sln --configuration Release --no-restore

    # Step 5: Run tests
    - name: Run tests
      run: dotnet test ./FilmLibraryManagement.sln --configuration Release --no-restore --verbosity normal

    # Step 6: Publish the app
    - name: Publish the app
      run: dotnet publish ./FilmLibraryManagement/FilmLibraryManagement.csproj --configuration Release --no-restore --no-build -o ./publish

    # Step 7: Build Docker image
    - name: Build Docker image
      run: |
        docker build -t my-api-image .  # Ensure Dockerfile is in the root or update path if needed
      env:
        DOCKER_BUILDKIT: 1

    # Optional Deployment steps
    # Uncomment the relevant deployment method depending on where you want to deploy the app
    
    # Step 8: Deploy to server via SCP (If you need to use SCP)
    # - name: Deploy to server via SCP
    #   if: success()
    #   uses: appleboy/scp-action@v0.1.7
    #   with:
    #     host: ${{ secrets.SERVER_HOST }}
    #     username: ${{ secrets.SERVER_USER }}
    #     key: ${{ secrets.SERVER_SSH_KEY }}
    #     source: "./publish"
    #     target: "/var/www/your-api-folder"
    #     port: 22

    # Step 9: Deploy to Azure Web App (If you need Azure deployment)
    # - name: Deploy to Azure Web App
    #   uses: Azure/webapps-deploy@v2
    #   with:
    #     app-name: <your-app-name>
    #     publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
    #     package: ./publish